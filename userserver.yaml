openapi: 3.0.0
info:
  title: MyDibba User Microservice APIs
  description: Browse [Home](http://localhost:4050/api-docs/) <br> MyDibba User Service Rest Api Documentation.
  version: 0.1.9
servers:
  - url: http://localhost:4050/
    description: User Microservice Rest Endpoint
  - url: http://localhost:4050/api/auth/
    description: Authentication Rest Endpoint
paths:
  /api/version:
    get:
      tags:
      - Check Current Application version
      summary: Checks Current app version
      description: 'Check your Microservice version api'
      operationId: checkVersion
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    value: string

  /api/auth/register:
    post:
      tags:
      - User registration API
      summary: Checks Current app version
      description: 'Creates a new user'
      operationId: RegisterUser
      post:
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                firstname:
                  type: string
                lastname:
                  type: string
              required:
                - password
                - email
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    value: string


  /api/auth/login:
    post:
      tags:
      - User Login API
      summary: Creates a Login session
      description: 'Checks if you are a valid user'
      operationId: LoginUser
      post:
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - password
                - email
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    value: string
